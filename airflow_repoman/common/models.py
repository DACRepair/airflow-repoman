"""
SQLA model for DAG Repo
"""

import datetime

from airflow.models.base import Base
from airflow.settings import conf
from sqlalchemy import Boolean, Column, DateTime, Integer, String
from sqlalchemy_utils import EncryptedType
from sqlalchemy_utils.types.encrypted.encrypted_type import FernetEngine


class DAGRepo(Base):
    """
    DAG Repo

    id - autogenerated ID
    name - Repo name
    enabled - Sync enabled
    repo_url - remote url
    repo_branch - remote branch
    remote_user - remote username
    remote_pass - remote password
    interval - update interval (seconds)
    last_checked - last time repo was checked for updates
    last_updated - last time changes were made
    """
    __tablename__ = "repoman_repos"
    id = Column(Integer(), primary_key=True, autoincrement=True)

    name = Column(String(255))
    enabled = Column(Boolean(), default=True)

    remote_url = Column(String(2048), nullable=False)
    remote_branch = Column(String(64), default='master')

    remote_user = Column(String(5000), default=None, nullable=True)
    remote_pass = Column(EncryptedType(
        String(5000),
        conf.get('core', 'fernet_key', fallback=None),
        FernetEngine))

    interval = Column(Integer(), default=600)

    last_checked = Column(DateTime(), default=datetime.datetime.utcnow())
    last_updated = Column(DateTime(), default=datetime.datetime.utcnow())

    def __str__(self):
        return str(self.name)

    def __repr__(self):
        return self.__str__()
